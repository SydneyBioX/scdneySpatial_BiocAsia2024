[{"path":"https://sydneybiox.github.io/scdneySpatial_BiocAsia2024/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2020 Sean Davis Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://sydneybiox.github.io/scdneySpatial_BiocAsia2024/articles/scdneySpatial.html","id":"overview","dir":"Articles","previous_headings":"","what":"Overview","title":"Unlocking single cell spatial omics analyses with scdney","text":"Understanding interplay different types cells immediate environment critical understanding mechanisms cells function context human diseases. Recent advances high dimensional situ cytometry technologies fundamentally revolutionized ability observe complex cellular relationships providing unprecedented characterisation cellular heterogeneity tissue environment.","code":""},{"path":"https://sydneybiox.github.io/scdneySpatial_BiocAsia2024/articles/scdneySpatial.html","id":"description","dir":"Articles","previous_headings":"Overview","what":"Description","title":"Unlocking single cell spatial omics analyses with scdney","text":"workshop introduce key analytical concepts needed analyse data high dimensional spatial omics technologies , PhenoCycler, IMC, Xenium MERFISH. show functionality Bioconductor packages simpleSeg, FuseSOM, scClassify, scHot, spicyR, listClust, statial, scFeatures ClassifyR can used address various biological hypotheses. end workshop attendees able implement assess key steps spatial analysis pipeline including cell segmentation, feature normalisation, cell type identification, microenvironment cell-state characterisation, spatial hypothesis testing patient classification. Understanding key steps provide attendees core skills needed interrogate comprehensive spatial information generated exciting new technologies.","code":""},{"path":"https://sydneybiox.github.io/scdneySpatial_BiocAsia2024/articles/scdneySpatial.html","id":"pre-requisites","dir":"Articles","previous_headings":"Overview","what":"Pre-requisites","title":"Unlocking single cell spatial omics analyses with scdney","text":"expected students : basic knowledge R syntax, workshop provide -depth description cell-resolution spatial omics technologies.","code":""},{"path":"https://sydneybiox.github.io/scdneySpatial_BiocAsia2024/articles/scdneySpatial.html","id":"r-bioconductor-packages-used","dir":"Articles","previous_headings":"Overview","what":"R / Bioconductor packages used","title":"Unlocking single cell spatial omics analyses with scdney","text":"Several single cell R packages used scdney package, information visit: https://sydneybiox.github.io/scdney/.","code":""},{"path":"https://sydneybiox.github.io/scdneySpatial_BiocAsia2024/articles/scdneySpatial.html","id":"learning-objectives","dir":"Articles","previous_headings":"Overview","what":"Learning objectives","title":"Unlocking single cell spatial omics analyses with scdney","text":"Understand visualise spatial omics datasets. Identify key biological questions can addressed technologies spatial analysis. Understand key analytical steps involved spatial omics analysis, perform steps using R. Evaluate performance data normalisation cell segmentation. Understand generate individual feature representations spatial omics data. Develop appreciation assess performance classification models. Perform disease outcome prediction using feature representation robust classification framework.","code":""},{"path":"https://sydneybiox.github.io/scdneySpatial_BiocAsia2024/articles/scdneySpatial.html","id":"context","dir":"Articles","previous_headings":"","what":"Context","title":"Unlocking single cell spatial omics analyses with scdney","text":"following re-analyse IMC data (Ferguson et al, 2022) profiling spatial landscape head neck cutaneous squamous cell carcinomas (HNcSCC), second common type skin cancer. majority HNcSCC can treated surgery good local control, subset large tumours infiltrate subcutaneous tissue considered high risk local recurrence metastases. key conclusion manuscript (amongst others) spatial information cells immune environment can used predict primary tumour progression metastases patients. use spicy workflow reach similar conclusion.","code":""},{"path":[]},{"path":[]},{"path":"https://sydneybiox.github.io/scdneySpatial_BiocAsia2024/articles/scdneySpatial.html","id":"installation","dir":"Articles","previous_headings":"Context > Setup","what":"Installation","title":"Unlocking single cell spatial omics analyses with scdney","text":"","code":"if (!requireNamespace(\"BiocManager\", quietly = TRUE)) {     install.packages(\"BiocManager\") }  BiocManager::install(c( \"simpleSeg\", \"cytomapper\", \"scClassify\", \"scHOT\", \"FuseSOM\",\"glmnet\", \"spicyR\", \"lisaClust\",\"Statial\", \"scFeatures\", \"ClassifyR\", \"tidyverse\", \"scater\", \"SingleCellExperiment\", \"STexampleData\", \"SpatialDatasets\", \"tidySingleCellExperiment\", \"scuttle\", \"batchelor\"))"},{"path":"https://sydneybiox.github.io/scdneySpatial_BiocAsia2024/articles/scdneySpatial.html","id":"load-packages","dir":"Articles","previous_headings":"Context > Setup","what":"Load packages","title":"Unlocking single cell spatial omics analyses with scdney","text":"","code":"# packages from scdney library(scdneySpatialBiocAsia2024) library(SpatialDatasets) library(simpleSeg) library(FuseSOM) library(lisaClust) library(spicyR) library(Statial) library(ClassifyR)  # Other required packages library(tidySingleCellExperiment) library(tidyverse) library(SingleCellExperiment) library(cytomapper) library(scater) library(glmnet)  theme_set(theme_classic())  nCores <- 8  # Feel free to parallelise things if you have the cores to spare. BPPARAM <- simpleSeg:::generateBPParam(nCores) source(system.file(\"extdata\", \"utils.R\", package = \"scdneySpatialBiocAsia2024\")) options(\"restore_SingleCellExperiment_show\" = TRUE)"},{"path":"https://sydneybiox.github.io/scdneySpatial_BiocAsia2024/articles/scdneySpatial.html","id":"download-images","dir":"Articles","previous_headings":"Context > Setup","what":"Download images","title":"Unlocking single cell spatial omics analyses with scdney","text":"Feel free follow along section. Much segmentation pipeline computationally demanding, likely won’t able run Bioconductor Galaxy servers.","code":"# Reads images to cache in a directory specified by the pathToImages variable. pathToImages <- SpatialDatasets::Ferguson_Images() tmp <- tempfile() # Creates a temporary directory. unzip(pathToImages, exdir = tmp) # Unzips files to the temporary directory.  # Store images in a CytoImageList on_disk as h5 files to save memory. images <- cytomapper::loadImages(   tmp, # Read files from the temporary directory.   single_channel = TRUE,   on_disk = TRUE,   h5FilesPath = HDF5Array::getHDF5DumpDir(),   BPPARAM = BPPARAM )  mcols(images) <- S4Vectors::DataFrame(imageID = names(images)) # Clean channel names cn <- channelNames(images) # Read in channel names head(cn)  cn <- sub(\".*_\", \"\", cn) # Remove preceding letters cn <- sub(\".ome\", \"\", cn) # Remove the .ome head(cn)  channelNames(images) <- cn # Reassign channel names # Clean image names head(names(images))  nam <- sapply(strsplit(names(images), \"_\"), `[`, 3) head(nam)  names(images) <- nam # Reassigning image names mcols(images)[[\"imageID\"]] <- nam # Reassigning image names"},{"path":"https://sydneybiox.github.io/scdneySpatial_BiocAsia2024/articles/scdneySpatial.html","id":"simpleseg-segmentation","dir":"Articles","previous_headings":"Context","what":"SimpleSeg: Segmentation","title":"Unlocking single cell spatial omics analyses with scdney","text":"SimpleSeg Package","code":""},{"path":"https://sydneybiox.github.io/scdneySpatial_BiocAsia2024/articles/scdneySpatial.html","id":"run-simpleseg","dir":"Articles","previous_headings":"Context > SimpleSeg: Segmentation","what":"Run simpleSeg","title":"Unlocking single cell spatial omics analyses with scdney","text":"images stored list CytoImageList can segmented simple call simpleSeg(). summarise, simpleSeg() R implementation simple segmentation technique traces nuclei using specified channel using nucleus dilates around traced nuclei specified amount using discSize. nucleus can traced using either one specified channel, using principal components channels correlated specified nuclear channel setting pca = TRUE. particular example , asked simpleSeg following: setting nucleus = c(\"HH3\"), ’ve asked simpleSeg trace nuclei signal images using HH3 channel. setting pca = TRUE, simpleSeg segments nuclei mask using principal component analysis channels using principal components aligned nuclei channel, case, HH3. setting cellBody = \"dilate\", simpleSeg uses dilation strategy segmentation, expanding nucleus specified discSize. setting discSize = 3, simpleSeg dilates nucleus 3 pixels. setting sizeSelection = 20, simpleSeg ensures cells size greater 20 pixels used. setting transform = \"sqrt\", simpleSeg square root transforms channels prior segmentation. setting tissue = c(\"panCK\", \"CD45\", \"HH3\"), specify tissue mask simpleSeg uses, filtering background noise outside tissue mask. important tumour cores, wand hence circular, ’d want ignore background noise happens outside tumour core. many parameters can specified simpleSeg (smooth, watershed, tolerance, ext), encourage user select best parameters suit biological context.","code":"masks <- simpleSeg(images,                    nucleus = c(\"HH3\"),                    pca = TRUE,                    cellBody = \"dilate\",                    discSize = 3,                    sizeSelection = 20,                    transform = \"sqrt\",                    tissue = c(\"panCK\", \"CD45\", \"HH3\"),                    cores = nCores                    )"},{"path":"https://sydneybiox.github.io/scdneySpatial_BiocAsia2024/articles/scdneySpatial.html","id":"visualise-outlines","dir":"Articles","previous_headings":"Context > SimpleSeg: Segmentation","what":"Visualise outlines","title":"Unlocking single cell spatial omics analyses with scdney","text":"plotPixels function cytomapper makes easy overlay mask top nucleus intensity marker see well segmentation process performed. can see segmentation appears performing reasonably. see -segmentation images, discSize key parameter simpleSeg() optimising size dilation disc segmenting nuclei. wish visualise multiple markers instead just HH3 marker see segmentation mask performs, can also done. , can see segmentation mask done good job capturing CD31 signal, perhaps good job capturing FXIIIA signal, often lies outside dilated nuclear mask. suggest might need increase discSize dilation. Questions information ’re capturing segmentation? parameters might change improve segmentation? intrinsic limitations simpleSeg method? order characterise phenotypes segmented cells, measureObjects() cytomapper calculate average intensity channel within cell well morphological features. default, measureObjects() function return SingleCellExperiment object, channel intensities stored counts assay spatial location cell stored colData m.cx m.cy columns. However, can also specify measureObjects() return SpatialExperiment object specifying return_as = \"spe\". SpatialExperiment object, spatial location cell stored spatialCoords slot, m.cx m.cy, simplifies plotting. demonstration, return SpatialExperiment object. Next, associate features image disease progression, important read information links image identifiers progression status. , making sure imageID column matches.","code":"plotPixels(image = images[\"F3\"],             mask = masks[\"F3\"],            img_id = \"imageID\",             colour_by = c(\"HH3\"),             display = \"single\",            colour = list(HH3 = c(\"black\",\"blue\")),            legend = NULL,            bcg = list(              HH3 = c(1, 1, 2)            )) plotPixels(image = images[\"F3\"],             mask = masks[\"F3\"],            img_id = \"imageID\",             colour_by = c(\"HH3\", \"CD31\", \"FX111A\"),             display = \"single\",            colour = list(HH3 = c(\"black\",\"blue\"),                          CD31 = c(\"black\", \"red\"),                          FX111A = c(\"black\", \"green\") ),            legend = NULL,            bcg = list(              HH3 = c(1, 1, 2),              CD31 = c(0, 1, 2),              FX111A = c(0, 1, 1.5)            )) # Summarise the expression of each marker in each cell cells <- cytomapper::measureObjects(masks,                                     images,                                     img_id = \"imageID\",                                     return_as = \"spe\",                                     BPPARAM = BPPARAM)  spatialCoordsNames(cells) <- c(\"x\", \"y\") clinical <- read.csv(   system.file(     \"extdata/clinicalData_TMA1_2021_AF.csv\",     package = \"scdneySpatialBiocAsia2024\"   ) )  rownames(clinical) <- clinical$imageID clinical <- clinical[names(images), ]  colData(cells) <- cbind(colData(cells), clinical[cells$imageID, ])"},{"path":"https://sydneybiox.github.io/scdneySpatial_BiocAsia2024/articles/scdneySpatial.html","id":"simpleseg-normalisation","dir":"Articles","previous_headings":"Context","what":"simpleSeg: Normalisation","title":"Unlocking single cell spatial omics analyses with scdney","text":"’ve made easy follow normalisation section. SpatialDatasets package segmented SCE file stored function spe_Ferguson_2022().","code":"#Download data now cells = SpatialDatasets::spe_Ferguson_2022()  cells$x = spatialCoords(cells)[, \"x\"] cells$y = spatialCoords(cells)[, \"y\"]"},{"path":"https://sydneybiox.github.io/scdneySpatial_BiocAsia2024/articles/scdneySpatial.html","id":"normalise-the-data","dir":"Articles","previous_headings":"Context > simpleSeg: Normalisation","what":"Normalise the data","title":"Unlocking single cell spatial omics analyses with scdney","text":"check see marker intensities cell require form transformation normalisation. reason two-fold: 1) intensities images often highly skewed, preventing meaningful downstream analysis. 2) intensities across different images often different, meaning considered “positive” can different across images. transforming normalising data, aim reduce two effects. extract intensities counts assay. Looking CD3 expressed majority T cells, intensities clearly skewed, difficult see considered CD3- cell, CD3+ cell.  Questions Can see CD3+ vs CD3- cell ?","code":"# Plot densities of CD3 for each image. cells |>    join_features(features = rownames(cells), shape = \"wide\", assay = \"counts\") |>    ggplot(aes(x = CD3, colour = imageID)) +    geom_density() +    theme(legend.position = \"none\")"},{"path":"https://sydneybiox.github.io/scdneySpatial_BiocAsia2024/articles/scdneySpatial.html","id":"dimension-reduction-and-visualisation","dir":"Articles","previous_headings":"Context > simpleSeg: Normalisation","what":"Dimension reduction and visualisation","title":"Unlocking single cell spatial omics analyses with scdney","text":"data stored SpatialExperiment can also use scater perform visualise data lower dimension look batch effects images. can see normalisation, UMAP shows clear batch effect images.  can transform normalise data using normalizeCells function. normalizeCells() function, specify following parameters. transformation optional argument specifies function applied data. apply arcsinh transformation , already apply square root transform simpleSeg() function. method = c(\"trim99\", \"mean\", PC1\") optional argument specifies normalisation method/s performed. , : 1) Trim 99th percentile 2) Divide mean 3) Remove 1st principal component assayIn = \"counts\" required argument specifies assay ’ll taking intensity data named. context, called counts. modified data stored norm assay default. can see normalised data appears bimodal, perfectly, likely sufficient degree clustering, can least observe clear CD3+ peak 1.00, CD3- peak around 0.3.  Questions Can see CD3+ vs CD3- cell ?  Questions hoping achieve normalisation? changed pre-normalisation post-normalisation correction UMAP?","code":"# Usually we specify a subset of the original markers which are informative to separating out distinct cell types for the UMAP and clustering. ct_markers <- c(\"podoplanin\", \"CD13\", \"CD31\",                 \"panCK\", \"CD3\", \"CD4\", \"CD8a\",                 \"CD20\", \"CD68\", \"CD16\", \"CD14\", \"HLADR\", \"CD66a\")  set.seed(51773) # Perform dimension reduction using UMAP. cells <- scater::runUMAP(   cells,   subset_row = ct_markers,   exprs_values = \"counts\" )  # Select a subset of images to plot. someImages <- unique(cells$imageID)[c(1, 5, 10, 20, 30, 40)]  # UMAP by imageID. scater::plotReducedDim(   cells[, cells$imageID %in% someImages],   dimred = \"UMAP\",   colour_by = \"imageID\" ) # Leave out the nuclei markers from our normalisation process.  useMarkers <- rownames(cells)[!rownames(cells) %in% c(\"DNA1\", \"DNA2\", \"HH3\")]  # Transform and normalise the marker expression of each cell type. cells <- simpleSeg::normalizeCells(cells,                         markers = useMarkers,                         transformation = NULL,                         method = c(\"trim99\", \"mean\", \"PC1\"),                         assayIn = \"counts\",                         cores = nCores )  # Plot densities of CD3 for each image cells |>    join_features(features = rownames(cells), shape = \"wide\", assay = \"norm\") |>    ggplot(aes(x = CD3, colour = imageID)) +    geom_density() +    theme(legend.position = \"none\") set.seed(51773) # Perform dimension reduction using UMAP. cells <- scater::runUMAP(   cells,   subset_row = ct_markers,   exprs_values = \"norm\",   name = \"normUMAP\" )  someImages <- unique(cells$imageID)[c(1, 5, 10, 20, 30, 40)]  # UMAP by imageID. scater::plotReducedDim(   cells[, cells$imageID %in% someImages],   dimred = \"normUMAP\",   colour_by = \"imageID\" )"},{"path":"https://sydneybiox.github.io/scdneySpatial_BiocAsia2024/articles/scdneySpatial.html","id":"fusesom","dir":"Articles","previous_headings":"Context","what":"FuseSOM","title":"Unlocking single cell spatial omics analyses with scdney","text":"FuseSOM Package FuseSOM Article dissect information cell interactions , cell-specific differences groups, next perform clustering. runFuseSOM() function FuseSOM package conveniently runs clustering SingleCellExperiment object, specifying number clusters numClusters. can also observe reasonable choice k = 10 , using estimateNumCluster() optiPlot() functions. examine Gap method, others Silhouette Within Cluster Distance also available. can see elbow points gap statistic k = 7, k = 10, k = 11. ’ve specified k = 10, striking good balance number clusters gap statistic.  Questions choice k = 10 good choice? k might made sense? biological perspective, increasing k ?","code":"# Set seed. set.seed(51773)  # Generate SOM and cluster cells into 10 groups cells <- runFuseSOM(   cells,   markers = ct_markers,   assay = \"norm\",   numClusters = 10 ) cells <- estimateNumCluster(cells, kSeq = 2:30) optiPlot(cells, method = \"gap\")"},{"path":"https://sydneybiox.github.io/scdneySpatial_BiocAsia2024/articles/scdneySpatial.html","id":"attempt-to-interpret-the-phenotype-of-each-cluster","dir":"Articles","previous_headings":"Context > FuseSOM","what":"Attempt to interpret the phenotype of each cluster","title":"Unlocking single cell spatial omics analyses with scdney","text":"can begin process understanding cell clusters using plotGroupedHeatmap function scater. least, can see capture major immune populations expect see, including CD4 CD8 T cells, CD20+ B cells, CD68+ myeloid populations, CD66+ granulocytes, podoplanin+ epithelial cells, panCK+ tumour cells.  Given domain-specific knowledge tumour-immune landscape, can go ahead annotate clusters cell types given expression profiles. might also interested cell types distributed images . examine distribution clusters image F3, noting healthy epithelial endothelial structures surrounded tumour cells.  find always useful check number cells cluster. Questions distribution cell types make sense? normally expect expressed cell type least expressed cell type dataset? can also use UMAP computed earlier visualise data lower dimension see well annotated cell types cluster .","code":"# Visualise marker expression in each cluster. scater::plotGroupedHeatmap(   cells,   features = ct_markers,   group = \"clusters\",   exprs_values = \"norm\",   center = TRUE,   scale = TRUE,   zlim = c(-3, 3),   cluster_rows = FALSE,   block = \"clusters\" ) cells <- cells |>   mutate(cellType = case_when(     clusters == \"cluster_1\" ~ \"GC\", # Granulocytes     clusters == \"cluster_2\" ~ \"MC\", # Myeloid cells     clusters == \"cluster_3\" ~ \"SC\", # Squamous cells     clusters == \"cluster_4\" ~ \"EP\", # Epithelial cells     clusters == \"cluster_5\" ~ \"SC\", # Squamous cells     clusters == \"cluster_6\" ~ \"TC_CD4\", # CD4 T cells     clusters == \"cluster_7\" ~ \"BC\", # B cells     clusters == \"cluster_8\" ~ \"EC\", # Endothelial cells     clusters == \"cluster_9\" ~ \"TC_CD8\", # CD8 T cells     clusters == \"cluster_10\" ~ \"DC\" # Dendritic cells   )) reducedDim(cells, \"spatialCoords\") <- spatialCoords(cells)  cells |>    filter(imageID == \"F3\") |>    plotReducedDim(\"spatialCoords\", colour_by = \"cellType\") # Check cell type frequencies. cells$cellType |>   table() |>   sort() #>  #>     DC     BC     MC     GC TC_CD8 TC_CD4     EC     EP     SC  #>   2411   4322   5283   7993   8534  11753  14159  14170  87288 # UMAP by cell type scater::plotReducedDim(   cells[, cells$imageID %in% someImages],   dimred = \"normUMAP\",   colour_by = \"cellType\" )"},{"path":"https://sydneybiox.github.io/scdneySpatial_BiocAsia2024/articles/scdneySpatial.html","id":"spicyr-test-spatial-relationships","dir":"Articles","previous_headings":"Context","what":"spicyR: Test spatial relationships","title":"Unlocking single cell spatial omics analyses with scdney","text":"spicyR Package Put simply, spicyR uses L-function determine localisation dispersion cell types. L-function arbitrary measure “closeness” points, larger values suggesting increased localisation attraction, lower values suggesting dispersion avoidance cell types. , quantify spatial relationships using combination 10 radii 10 100 specifying Rs = 1:10*10 account global tissue structure using sigma = 50. information optimise parameters can found vignette spicyR paper. can visualise tests using signifPlot observe cell type pairs appear become less attractive (avoid ) progression sample.  spicyR also functionality plotting individual pairwise relationships. can first try look whether SC tumour cell type localises GC granular cell type, whether localisation affects progression vs non-progression tumour.  Alternatively, can look differentially localised relationship progressors non-progressors specifying rank = 1.","code":"spicyTest <- spicy(cells,                   condition = \"group\",                   cellTypeCol = \"cellType\",                   imageIDCol = \"imageID\",                   Rs = 1:10*10,                   sigma = 50,                   BPPARAM = BPPARAM)  topPairs(spicyTest, n = 10) #>             intercept coefficient    p.value adj.pvalue   from     to #> BC__EC     -1.1346644    8.304020 0.03391529  0.6931721     BC     EC #> EC__BC     -1.5909700    7.919971 0.04134661  0.6931721     EC     BC #> GC__TC_CD4 -7.6316673   11.005639 0.05047096  0.6931721     GC TC_CD4 #> TC_CD4__GC -7.5406782   11.077602 0.05709461  0.6931721 TC_CD4     GC #> TC_CD4__EP -0.7117393    4.853317 0.07261120  0.6931721 TC_CD4     EP #> EP__TC_CD4 -0.7070918    4.820661 0.07510118  0.6931721     EP TC_CD4 #> EP__TC_CD8 -3.1445464    5.779536 0.08047994  0.6931721     EP TC_CD8 #> TC_CD8__EP -2.9313474    5.688420 0.09522058  0.6931721 TC_CD8     EP #> TC_CD4__EC  3.1984391    4.366122 0.09716499  0.6931721 TC_CD4     EC #> EC__TC_CD4  3.1052061    4.263971 0.10461424  0.6931721     EC TC_CD4 # Visualise which relationships are changing the most. signifPlot(spicyTest) spicyBoxPlot(spicyTest,               from = \"SC\",               to = \"GC\") spicyBoxPlot(spicyTest,               rank = 1)"},{"path":"https://sydneybiox.github.io/scdneySpatial_BiocAsia2024/articles/scdneySpatial.html","id":"lisaclust-find-cellular-neighbourhoods","dir":"Articles","previous_headings":"Context","what":"lisaClust: Find cellular neighbourhoods","title":"Unlocking single cell spatial omics analyses with scdney","text":"lisaClust Package lisaClust Article lisaClust provides series functions identify visualise regions tissue spatial associations cell-types similar. package can used provide high-level summary cell-type co-localisation multiplexed imaging data segmented single-cell resolution. use lisaClust function clusters cells 5 regions distinct spatial ordering.","code":"set.seed(51773)  cells <- lisaClust(   cells,   k = 4,   sigma = 50,   cellType = \"cellType\",   BPPARAM = BPPARAM )"},{"path":"https://sydneybiox.github.io/scdneySpatial_BiocAsia2024/articles/scdneySpatial.html","id":"region---cell-type-enrichment-heatmap","dir":"Articles","previous_headings":"Context > lisaClust: Find cellular neighbourhoods","what":"Region - cell type enrichment heatmap","title":"Unlocking single cell spatial omics analyses with scdney","text":"can interpret spatial orderings regions quantifying using regionMap function. plots frequency cell type region relative expect chance. can see regions neatly separated according biological milieu, region 1 2 representing immune cell regions, region 3 representing tumour cells, region 4 representing healthy epithelial endothelial cells.","code":"# Visualise the enrichment of each cell type in each region regionMap(cells, cellType = \"cellType\", limit = c(0.2, 2))"},{"path":"https://sydneybiox.github.io/scdneySpatial_BiocAsia2024/articles/scdneySpatial.html","id":"visualise-regions","dir":"Articles","previous_headings":"Context > lisaClust: Find cellular neighbourhoods","what":"Visualise regions","title":"Unlocking single cell spatial omics analyses with scdney","text":"default, identified regions stored regions column colData SpatialExperiment object. can quickly examine spatial arrangement regions using ggplot image F3, can see division immune, healthy, tumour tissue identified regionMap.  much slower, also implemented function overlaying region information hatching pattern information can viewed simultaneously cell type calls.","code":"cells |>    filter(imageID == \"F3\") |>    plotReducedDim(\"spatialCoords\", colour_by = \"region\") # Use hatching to visualise regions and cell types. hatchingPlot(   cells,   useImages = \"F3\",   cellType = \"cellType\",   nbp = 300 )"},{"path":"https://sydneybiox.github.io/scdneySpatial_BiocAsia2024/articles/scdneySpatial.html","id":"test-for-association-with-progression","dir":"Articles","previous_headings":"Context > lisaClust: Find cellular neighbourhoods","what":"Test for association with progression","title":"Unlocking single cell spatial omics analyses with scdney","text":"Similar cell type proportions, can quickly use colTest function test associations proportions cells region progression status specifying feature = \"region\".","code":"# Test if the proportion of each region is associated # with progression status. testRegion <- colTest(   cells,   feature = \"region\",   condition = \"group\",   type = \"ttest\")  testRegion #>          mean in group NP mean in group P tval.t pval adjPval  cluster #> region_3            0.590           0.640  -1.20 0.24    0.47 region_3 #> region_2            0.052           0.039   0.96 0.34    0.47 region_2 #> region_1            0.140           0.120   0.73 0.47    0.47 region_1 #> region_4            0.210           0.200   0.73 0.47    0.47 region_4"},{"path":"https://sydneybiox.github.io/scdneySpatial_BiocAsia2024/articles/scdneySpatial.html","id":"statial","dir":"Articles","previous_headings":"Context","what":"Statial","title":"Unlocking single cell spatial omics analyses with scdney","text":"Statial Package","code":""},{"path":"https://sydneybiox.github.io/scdneySpatial_BiocAsia2024/articles/scdneySpatial.html","id":"spatiomark-continuous-changes-in-marker-expression-associated-with-varying-levels-of-localisation-","dir":"Articles","previous_headings":"Context > Statial","what":"SpatioMark: Continuous changes in marker expression associated with varying levels of localisation.","title":"Unlocking single cell spatial omics analyses with scdney","text":"first step analysing changes calculate spatial proximity (getDistances) cell every cell type. values stored reducedDims slot SingleCellExperiment object names distances. SpatioMark also provides functionality look proximal cell abundance using getAbundance() function, explored within Statial package vignette can visualise example image, specified image = \"F3\" particular marker interaction cell type localisation. visualise changes, specify two cell types parameters, marker marker parameter (cell-cell-marker interactions). , specify changes marker podoplanin SC localisation EP increases decreases, can observe podoplanin decreases distance dense clump tumour cells increases.   SpatioMark aims holistically uncover significant relationships looking interactions across images. calcStateChanges() function provided Statial can expanded exact purpose - specifying cell types, marker, image, calcStateChanges() examine significant correlations distance marker expression across entire dataset. results SpatioMark outputs can converted data.frame matrix, using prepMatrix() function. Note, choice extracting either t-statistic coefficient linear regression can specified using column = \"tval\" parameter, coefficient default extracted parameter. can see SpatioMark, get features significant adjusting FDR.","code":"cells <- getDistances(cells,   maxDist = 200,   nCores = nCores,   cellType = \"cellType\",   spatialCoords = c(\"x\", \"y\") ) p <- plotStateChanges(   cells = cells,   cellType = \"cellType\",   spatialCoords = c(\"x\", \"y\"),   type = \"distances\",   image = \"F3\",   from = \"SC\",   to = \"EP\",   marker = \"podoplanin\",   size = 1,   shape = 19,   interactive = FALSE,   plotModelFit = FALSE,   method = \"lm\" )  p #> $image #>  #> $scatter state_dist <- calcStateChanges(   cells = cells,   cellType = \"cellType\",   type = \"distances\",   assay = 2,   nCores = nCores,   minCells = 100 )  head(state_dist[state_dist$imageID == \"F3\",], n = 10) #>       imageID primaryCellType otherCellType     marker          coef      tval #> 51810      F3              SC            EP podoplanin -0.0006911103 -16.90036 #> 23703      F3              EP            GC      CXCR3  0.0012103305  15.04988 #> 23704      F3              EP            GC     pSTAT3  0.0012299816  14.79933 #> 51978      F3              SC            GC       PDL2  0.0008802428  13.12601 #> 23669      F3              EP            MC       CCR7  0.0011476888  13.32900 #> 23775      F3              EP        TC_CD8      CXCR3  0.0016741880  12.95156 #> 51981      F3              SC            GC       ICOS  0.0005186181  11.75830 #> 23696      F3              EP            GC      CADM1  0.0011398625  12.18028 #> 11426      F3              EC            GC       CD31  0.0010070252  12.40866 #> 23758      F3              EP            EC       TIM3  0.0033539928  12.05028 #>               pval          fdr #> 51810 4.203881e-59 9.004712e-57 #> 23703 8.041089e-41 8.191646e-39 #> 23704 8.916789e-40 8.712976e-38 #> 51978 1.839014e-37 1.637728e-35 #> 23669 9.360248e-34 6.863845e-32 #> 23775 3.025912e-32 2.085497e-30 #> 51981 1.113579e-30 7.070268e-29 #> 23696 3.239532e-29 1.903862e-27 #> 11426 4.839241e-29 2.825645e-27 #> 23758 1.030900e-28 5.930114e-27 # Preparing outcome vector outcome <- cells$group[!duplicated(cells$imageID)] names(outcome) <- cells$imageID[!duplicated(cells$imageID)]  # Preparing features for Statial distMat <- prepMatrix(state_dist)  distMat <- distMat[names(outcome), ]  # Remove some very small values distMat <- distMat[, colMeans(abs(distMat) > 0.0001) > .8]  survivalResults <- colTest(distMat, outcome, type = \"ttest\")  head(survivalResults) #>                   mean in group NP mean in group P tval.t    pval adjPval #> EC__EC__CD13              -0.00240        -9.6e-04   -3.6 0.00086    0.27 #> SC__SC__VISTA             -0.00470        -1.7e-03   -3.3 0.00190    0.27 #> SC__TC_CD4__CXCR3         -0.00015         8.8e-04   -3.4 0.00230    0.27 #> SC__EP__Ki67              -0.00037        -7.3e-05   -3.2 0.00260    0.27 #> EC__SC__CD68               0.00029        -3.9e-04    3.2 0.00300    0.27 #> SC__BC__DNA1               0.02600        -1.4e-01    3.0 0.00480    0.27 #>                             cluster #> EC__EC__CD13           EC__EC__CD13 #> SC__SC__VISTA         SC__SC__VISTA #> SC__TC_CD4__CXCR3 SC__TC_CD4__CXCR3 #> SC__EP__Ki67           SC__EP__Ki67 #> EC__SC__CD68           EC__SC__CD68 #> SC__BC__DNA1           SC__BC__DNA1"},{"path":"https://sydneybiox.github.io/scdneySpatial_BiocAsia2024/articles/scdneySpatial.html","id":"kontextual","dir":"Articles","previous_headings":"Context > Statial","what":"Kontextual","title":"Unlocking single cell spatial omics analyses with scdney","text":"Pre-print  save time saved output results . can use spicyR::spicy test associations Kontextual values progression status. use alternateResult argument.  Questions Compare plot spicyR results previously using signifPlot(spicyTest), Kontextual results compare spicyR? interpretation differences spicyR Kontextual? Use plotKontextual() function visualise relationships (example ), anything strikes ?","code":"# Cluster cell type hierarchy hierarchy <- treekoR::getClusterTree(t(assay(cells, \"norm\")),                                      clusters = cells$cellType,                                      hierarchy_method = \"hopach\")   parentList = Statial::getParentPhylo(hierarchy)  # Visualise tree hierarchy$clust_tree |>    plot() # Add parent 4 and 5 parentList$parent_4 = c(parentList$parent_2, parentList$parent_3) parentList$parent_5 = c(parentList$parent_1, \"EC\")  all = unique(cells$cellType)  # Create data frame with all pairwise combinations of cells treeDf = Statial::parentCombinations(all, parentList = parentList) kontext = Kontextual(   cells = cells,   cellType = \"cellType\",   r = 50,   parentDf = treeDf,   cores = nCores ) load(system.file(\"extdata\", \"kontext.rda\", package = \"scdneySpatialBiocAsia2024\")) # Converting Kontextual result into data matrix kontextMat <- prepMatrix(kontext)  # Replace NAs with 0 kontextMat[is.na(kontextMat)] <- 0  # Test association with outcome kontextOutcome = spicyR::spicy(   cells = cells,   alternateResult = kontextMat,   condition = \"group\",   BPPARAM = BPPARAM )  # Plot results signifPlot(kontextOutcome) signifPlot(spicyTest)  relationship = \"TC_CD4__EC__parent_5\" image = \"G4\"  kontext |>    filter(test == relationship)   plotKontextual(relationship, imageChoose = image)"},{"path":"https://sydneybiox.github.io/scdneySpatial_BiocAsia2024/articles/scdneySpatial.html","id":"classifyr-patient-classification","dir":"Articles","previous_headings":"","what":"ClassifyR: Patient classification","title":"Unlocking single cell spatial omics analyses with scdney","text":"ClassifyR Package Journal article ClassifyR package formalises convenient framework evaluating classification R. provide functionality easily include four key modelling stages; Data transformation, feature selection, classifier training prediction; cross-validation loop. use crossValidate function perform 50 repeats 5-fold cross-validation evaluate performance random forest applied five quantifications IMC data; 1) Cell type proportions 2) Cell type localisation spicyR 3) Region proportions lisaClust 4) Cell type localisation reference parent cell type Kontextual 5) Cell changes response proximal changes SpatioMark","code":"# Create list to store data.frames data <- list()  # Add proportions of each cell type in each image data[[\"Proportions\"]] <- getProp(cells, \"cellType\")  # Add pair-wise associations # spicyMat <- data.frame(spicyTest$pairwiseAssoc) # spicyMat[is.na(spicyMat)] <- 0 # spicyMat <- spicyMat |> #   select(!condition) |> #   tibble::column_to_rownames(\"imageID\") # #  # data[[\"SpicyR\"]] <- spicyMat  # Add proportions of each region in each image to the list of dataframes. data[[\"LisaClust\"]] <- getProp(cells, \"region\")   # Add SpatioMark features data[[\"SpatioMark\"]] <- distMat  # Add Kontextual features data[[\"Kontextual\"]] <- kontextMat # Set seed set.seed(51773)  # Perform 5-fold cross-validation with 50 repeats. cv <- crossValidate(   measurements = data,   outcome = outcome,   selectionMethod = \"t-test\",   classifier = \"LASSOGLM\",   nFolds = 5,   nFeatures = 20,   nRepeats = 50,   nCores = nCores )"},{"path":"https://sydneybiox.github.io/scdneySpatial_BiocAsia2024/articles/scdneySpatial.html","id":"visualise-cross-validated-prediction-performance","dir":"Articles","previous_headings":"ClassifyR: Patient classification","what":"Visualise cross-validated prediction performance","title":"Unlocking single cell spatial omics analyses with scdney","text":"use performancePlot function assess AUC repeat 5-fold cross-validation.  Questions Run following chunk code, plot telling us? different methods perform differently different samples? Knowing , might improve model?","code":"performancePlot(   cv,   metric = \"AUC\",   characteristicsList = list(x = \"Assay Name\"),   orderingList = list(\"Assay Name\" = c(\"Proportions\", \"SpicyR\", \"LisaClust\", \"Kontextual\", \"SpatioMark\")) ) samplesMetricMap(cv) |>    plot() cv <- crossValidate(   measurements = data,   outcome = outcome,   classifier = \"randomForest\",   nFolds = 5,   nRepeats = 50,   multiViewMethod = \"merge\",   nCores = nCores )  performancePlot(   cv,   metric = \"AUC\",   characteristicsList = list(x = \"Assay Name\"), )"},{"path":"https://sydneybiox.github.io/scdneySpatial_BiocAsia2024/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Farhan Ameen. Author, maintainer. Alex Qin. Author. Shreya Rao. Author. Ellis Patrick. Author.","code":""},{"path":"https://sydneybiox.github.io/scdneySpatial_BiocAsia2024/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Ameen F, Qin , Rao S, Patrick E (2024). scdneySpatialBiocAsia2024: Unlocking single cell spatial omics analyses scdney. R package version 2.0.1, https://sydneybiox.github.io/scdneySpatial_BiocAsia2024/.","code":"@Manual{,   title = {scdneySpatialBiocAsia2024: Unlocking single cell spatial omics analyses with scdney},   author = {Farhan Ameen and Alex Qin and Shreya Rao and Ellis Patrick},   year = {2024},   note = {R package version 2.0.1},   url = {https://sydneybiox.github.io/scdneySpatial_BiocAsia2024/}, }"},{"path":"https://sydneybiox.github.io/scdneySpatial_BiocAsia2024/index.html","id":"overview","dir":"","previous_headings":"","what":"Overview","title":"ScdneySpatial","text":"Understanding interplay different types cells immediate environment critical understanding mechanisms cells function context human diseases. Recent advances high dimensional situ cytometry technologies fundamentally revolutionized ability observe complex cellular relationships providing unprecedented characterisation cellular heterogeneity tissue environment.","code":""},{"path":"https://sydneybiox.github.io/scdneySpatial_BiocAsia2024/index.html","id":"description","dir":"","previous_headings":"","what":"Description","title":"ScdneySpatial","text":"tutorial introduce analytical framework analysing data high dimensional spatial omics technologies , CODEX, CycIF, IMC High Definition Spatial Transcriptomics. framework makes use functionality Bioconductor packages simpleSeg, FuseSOM, spicyR, listClust, Statial ClassifyR. end tutorial attendees able implement assess key steps spatial analysis pipeline including cell segmentation, feature normalisation, cell type identification, microenvironment cell-state characterisation, spatial hypothesis testing patient classification. Understanding key steps provide attendees core skills needed interrogate comprehensive spatial information generated exciting new technologies.","code":""},{"path":"https://sydneybiox.github.io/scdneySpatial_BiocAsia2024/index.html","id":"pre-requisites","dir":"","previous_headings":"Description","what":"Pre-requisites","title":"ScdneySpatial","text":"expected students : basic knowledge R syntax, familiarity SingleCellExperiment /SpatialExperiment objects, workshop provide -depth description cell-resolution spatial omics technologies.","code":""},{"path":"https://sydneybiox.github.io/scdneySpatial_BiocAsia2024/index.html","id":"time-outline","dir":"","previous_headings":"Description","what":"Time outline","title":"ScdneySpatial","text":"expected timing workshop:","code":""},{"path":"https://sydneybiox.github.io/scdneySpatial_BiocAsia2024/index.html","id":"learning-objectives","dir":"","previous_headings":"Description","what":"Learning objectives","title":"ScdneySpatial","text":"Understand visualise spatial omics datasets. Identify key biological questions can addressed technologies spatial analysis. Understand key analytical steps involved spatial omics analysis, perform steps using R. Evaluate performance data normalisation cell segmentation. Understand generate individual feature representations spatial omics data. Develop appreciation assess performance classification models. Perform disease outcome prediction using feature representation robust classification framework.","code":""}]
